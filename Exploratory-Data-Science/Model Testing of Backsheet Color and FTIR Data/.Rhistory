normalized <- decomposition(base.AAA, spcNorm, wavelength = base.AAA@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyamide Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyamide Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
base.PET <- subset(ftir.all, ftir.all$Material == "PET")
base.PET.DH <- subset(base.PET, base.PET$Exposure == "DampHeat")
qplotspc(base.PET.DH[c(1,7)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyethylene Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.PET, 1100:1300)
maxAbs <- which.max(base.PET$spc[1,indRange])
normPeak <- base.PET@wavelength[indRange][maxAbs] # It's at 1269 for this one
normIndex <- wl2i(base.PET, normPeak)
spcNorm <- 0*base.PET$spc
for (row in 1:nrow(base.PET@data$spc)) {
spcNorm[row, ] <- base.PET@data$spc[row, ] / base.PET$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.PET, spcNorm, wavelength = base.PET@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyamide Damp Heat FTIR Spectra Normalized to 1269",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyethylene Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
base.PVF <- subset(ftir.all, ftir.all$Material == "PVF")
base.PVF.DH <- subset(base.PVF, base.PVF$Exposure == "DampHeat")
qplotspc(base.PVF.DH[c(1,5,8,13)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
base.PVF.DH <- subset(base.PVF, base.PVF$Exposure == "DampHeat")
qplotspc(base.PVF.DH,
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(base.PVF.DH[c(1,7)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.PVF, 1000:1100)
maxAbs <- which.max(base.PVF$spc[1,indRange])
normPeak <- base.PVF@wavelength[indRange][maxAbs] # It's at 3288 for this one
normIndex <- wl2i(base.PVF, normPeak)
spcNorm <- 0*base.PVF$spc
for (row in 1:nrow(base.PVF@data$spc)) {
spcNorm[row, ] <- base.PVF@data$spc[row, ] / base.PVF$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.PVF, spcNorm, wavelength = base.PVF@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.PVF, 1000:1100)
maxAbs <- which.max(base.PVF$spc[1,indRange])
normPeak <- base.PVF@wavelength[indRange][maxAbs] # It's at 3288 for this one
normIndex <- wl2i(base.PVF, normPeak)
spcNorm <- 0*base.PVF$spc
for (row in 1:nrow(base.PVF@data$spc)) {
spcNorm[row, ] <- base.PVF@data$spc[row, ] / base.PVF$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.PVF, spcNorm, wavelength = base.PVF@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(normalized.DH[c(1,8)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(normalized.DH[c(2,8)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.PVF, 1000:1100)
maxAbs <- which.max(base.PVF$spc[1,indRange])
normPeak <- base.PVF@wavelength[indRange][maxAbs] # It's at 3288 for this one
normIndex <- wl2i(base.PVF, normPeak)
spcNorm <- 0*base.PVF$spc
for (row in 1:nrow(base.PVF@data$spc)) {
spcNorm[row, ] <- base.PVF@data$spc[row, ] / base.PVF$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.PVF, spcNorm, wavelength = base.PVF@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 1087",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy = TRUE, echo = TRUE)
library(dplyr)
library(tidyverse)
library(lme4)
library(leaps)
library(caret)
data.optical <- read.csv("./DSCI-352-optival_data.csv")
# Shorten the variable names a bit and a Material Column
data.optical <- data.optical %>% rename('exposure' = 'Exposure_Type',
'hours' = 'Exposure_Hours',
'YI' = 'Yellowness_Index',
'g60' = 'Gloss_60degree') %>%
mutate(Material = ifelse(SampleID == "sa31001", "PVDF", ifelse(
SampleID == "sa31002", "FCB", ifelse(
SampleID == "sa31003", "PET", ifelse(
SampleID == "sa31004", "PVF", "AAA"
)
)
)), SampleID = as.factor(SampleID), couponID = as.factor(couponID),
exposure = exposure, Measurement_Times = as.factor(Measurement_Times),
Material = as.factor(Material))
str(data.optical)
# Function takes in a given directory, and its associated exposure type
# Returns an spc object with all the associated metadata.
ftir <- function(dir, exposure) {
curDir <- getwd()
setwd(dir)
files <- list.files(path = "./", pattern = "*.dpt")
for (i in 1:length(files)) {
# Get some metadata from the filename
curFile <- files[i]
m <- regexpr("SPA.*dpt",curFile)
id <- substr(curFile, m - 8, m - 8) # sample ID
id <- paste0("sa3100", id, collapse = "")
# couponID <- substr(curFile, m - 6, m - 4) # couponID
mn <- as.numeric(substr(curFile, m - 2, m - 2)) # Measurement Number
exp <- exposure
hours <- parse_number(curFile)
step <- floor(hours/500)
coupon <- as.integer(substr(curFile, m-6, m-4))
m <- regexpr("P.*.",curFile)
material <- substr(curFile, m, m + attr(m,"match.length")-17)
material <- ifelse(material == "PA", "AAA", material)
# Read the dpt file as a csv and grab the second column
if (i == 1) {
wavelength <- read.csv(curFile, header = FALSE)$V1
spectra <- read.csv(curFile, header = FALSE)$V2
} else {
spectra <- read.csv(curFile, header = FALSE)$V2
}
# Create hyperSpec Object
spectrum <- new("hyperSpec", spc = spectra, wavelength = wavelength)
if (i == 1) {
ftir <- spectrum
ftir@data$SampleID <- id
ftir@data$Exposure <- exp
ftir@data$CouponID <- coupon
ftir@data$Material <- material
ftir@data$hours <- hours
ftir@data$Step <- step
ftir@data$Measurement_Times <- mn
} else {
# Add meta data to hyperSpec object
spectrum@data$SampleID <- id
spectrum@data$Exposure <- exp
spectrum@data$CouponID <- coupon
spectrum@data$Material <- material
spectrum@data$hours <- hours
spectrum@data$Step <- step
spectrum@data$Measurement_Times <- mn
# Combine spectrum with other spectra
ftir <- hyperSpec::collapse(ftir,spectrum)
}
}
setwd(curDir)
return(ftir)
}
ftir.DH <- ftir(dir = "./FTIR/DampHeat-FTIR/", exposure = "DampHeat")
ftir.X1 <- ftir(dir = "./FTIR/XENON1-FTIR", exposure = "Xenon#1")
ftir.X2 <- ftir(dir = "./FTIR/XENON2-FTIR", exposure = "Xenon#2")
# We will use this hyperSpec object to subset the data and plot them accordingly
ftir.all <- hyperSpec::collapse(ftir.DH, ftir.X1, ftir.X2)
## YI Plot
YI.plot <- data.optical %>% filter(Material == "PVDF") %>%
ggplot(aes(x = hours, y = YI)) +
geom_point(aes(color = exposure)) +
geom_smooth(mapping = aes(color = exposure), method = "lm") +
labs(color = "Exposure") +
xlab("Exposure Time (Hours)") + ylab("Yellowness Index (YI)") +
ggtitle("Yellowness Index of PVDF/PET/EVA") +
theme(plot.title = element_text(hjust = 0.5))
## Gloss Plot
gloss.plot <- data.optical %>% filter(Material == "PVDF") %>%
ggplot(aes(x = hours, y = g60)) +
geom_point(aes(color = exposure)) +
geom_smooth(mapping = aes(color = exposure), method = "lm") +
labs(color = "Exposure") +
xlab("Exposure Time (Hours)") + ylab("Gloss at 60°") +
ggtitle("Gloss at 60° of PVDF/PET/EVA") +
theme(plot.title = element_text(hjust = 0.5))
YI.plot
gloss.plot
# PVDF Models: sa31001
PVDF.YI.DH <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PVDF", exposure == "DampHeat"))
PVDF.YI.X1 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PVDF", exposure == "Xenon#1"))
PVDF.YI.X2 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PVDF", exposure == "Xenon#2"))
PVDF.G60.DH <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PVDF", exposure == "DampHeat"))
PVDF.G60.X1 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PVDF", exposure == "Xenon#1"))
PVDF.G60.X2 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PVDF", exposure == "Xenon#2"))
# FCB Models: sa31002
FCB.YI.DH <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "FCB", exposure == "DampHeat"))
FCB.YI.X1 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "FCB", exposure == "Xenon#1"))
FCB.YI.X2 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "FCB", exposure == "Xenon#2"))
FCB.G60.DH <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "FCB", exposure == "DampHeat"))
FCB.G60.X1 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "FCB", exposure == "Xenon#1"))
FCB.G60.X2 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "FCB", exposure == "Xenon#2"))
# PET Models: sa31003
PET.YI.DH <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PET", exposure == "DampHeat"))
PET.YI.X1 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PET", exposure == "Xenon#1"))
PET.YI.X2 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PET", exposure == "Xenon#2"))
PET.G60.DH <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PET", exposure == "DampHeat"))
PET.G60.X1 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PET", exposure == "Xenon#1"))
PET.G60.X2 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PET", exposure == "Xenon#2"))
# PVF Models: sa31004
PVF.YI.DH <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PVF", exposure == "DampHeat"))
PVF.YI.X1 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PVF", exposure == "Xenon#1"))
PVF.YI.X2 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "PVF", exposure == "Xenon#2"))
PVF.G60.DH <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PVF", exposure == "DampHeat"))
PVF.G60.X1 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PVF", exposure == "Xenon#1"))
PVF.G60.X2 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "PVF", exposure == "Xenon#2"))
# AAA Models: sa31005
AAA.YI.DH <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "AAA", exposure == "DampHeat"))
AAA.YI.X1 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "AAA", exposure == "Xenon#1"))
AAA.YI.X2 <-lm(YI ~ hours, data = data.optical %>%
filter(Material == "AAA", exposure == "Xenon#2"))
AAA.G60.DH <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "AAA", exposure == "DampHeat"))
AAA.G60.X1 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "AAA", exposure == "Xenon#1"))
AAA.G60.X2 <-lm(g60 ~ hours, data = data.optical %>%
filter(Material == "AAA", exposure == "Xenon#2"))
lms <- list(PVDF.G60.DH,PVDF.G60.X1,PVDF.G60.X2,PVDF.YI.DH,PVDF.YI.X1,PVDF.YI.X2,
FCB.G60.DH,FCB.G60.X1,FCB.G60.X2,FCB.YI.DH,FCB.YI.X1,FCB.YI.X2,
PET.G60.DH,PET.G60.X1,PET.G60.X2,PET.YI.DH,PET.YI.X1,PET.YI.X2,
PVF.G60.DH,PVF.G60.X1,PVF.G60.X2,PVF.YI.DH,PVF.YI.X1,PVF.YI.X2,
AAA.G60.DH,AAA.G60.X1,AAA.G60.X2,AAA.YI.DH,AAA.YI.X1,AAA.YI.X2)
# YI Plots
data.optical %>% filter(exposure == "DampHeat") %>%
ggplot() + geom_point(aes(x = hours, y = YI, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = YI, color = Material, fill = Material)) +
ggtitle("Yellowness Index for Materials Exposed to Damp Heat") +
theme(plot.title = element_text(hjust = 0.5))
data.optical %>% filter(exposure == "Xenon#1") %>%
ggplot() + geom_point(aes(x = hours, y = YI, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = YI, color = Material, fill = Material)) +
ggtitle("Yellowness Index for Materials Exposed to Xenon Arc #1") +
theme(plot.title = element_text(hjust = 0.5))
data.optical %>% filter(exposure == "Xenon#2") %>%
ggplot() + geom_point(aes(x = hours, y = YI, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = YI, color = Material, fill = Material)) +
ggtitle("Yellowness Index for Materials Exposed to Xenon Arc #2") +
theme(plot.title = element_text(hjust = 0.5))
# Gloss 60 Degrees Plots
data.optical %>% filter(exposure == "DampHeat") %>%
ggplot() + geom_point(aes(x = hours, y = g60, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = g60, color = Material, fill = Material)) +
ggtitle("Gloss at 60 Degrees for Materials Exposed to Damp Heat") +
theme(plot.title = element_text(hjust = 0.5))
data.optical %>% filter(exposure == "Xenon#1") %>%
ggplot() + geom_point(aes(x = hours, y = g60, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = g60, color = Material, fill = Material)) +
ggtitle("Gloss at 60 Degrees for Materials Exposed to Xenon Arc #1") +
theme(plot.title = element_text(hjust = 0.5))
data.optical %>% filter(exposure == "Xenon#2") %>%
ggplot() + geom_point(aes(x = hours, y = g60, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = g60, color = Material, fill = Material)) +
ggtitle("Gloss at 60 Degrees for Materials Exposed to Xenon Arc #2") +
theme(plot.title = element_text(hjust = 0.5))
material.colors <- ggplot_build(
data.optical %>% filter(exposure == "Xenon#2") %>%
ggplot() + geom_point(aes(x = hours, y = g60, color = Material)) +
geom_smooth(method = lm, aes(x = hours, y = g60, color = Material, fill = Material)) +
ggtitle("Gloss at 60 Degrees for Materials Exposed to Xenon Arc #2") +
theme(plot.title = element_text(hjust = 0.5)))$data
barplot(c(1, 1, 1, 1, 1), col = unique(material.colors[[1]]$colour),
names.arg = unique(material.colors[[1]]$colour))
AAA.color <- "#F8766D"
PET.color <- "#00BF7D"
data.optical %>% filter(exposure == "DampHeat", Material == "AAA") %>%
ggplot() + geom_jitter(aes(x = hours, y = YI, color = AAA.color), width = 8) +
geom_smooth(method = "lm", aes(x = hours, y = YI)) +
geom_smooth(method = "lm", formula = y~poly(x, 2), aes(x = hours, y = YI)) +
ggtitle("Yellowness Index for Polyamide (AAA) Exposed to Damp Heat") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")
data.optical %>% filter(exposure == "Xenon#1", Material == "PET") %>%
ggplot() + geom_jitter(aes(x = hours, y = YI), color = PET.color, width = 8) +
geom_smooth(method = "lm", aes(x = hours, y = YI)) +
geom_smooth(method = "lm", formula = y~poly(x,2), aes(x = hours, y = YI)) +
ggtitle("Yellowness Index for PET Exposed to Xenon Arc #1") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")
# DEGREE 3 Transformation
data.optical %>% filter(exposure == "Xenon#2", Material == "PET") %>%
ggplot() + geom_jitter(aes(x = hours, y = YI), color = PET.color, width = 8) +
geom_smooth(method = "lm", aes(x = hours, y = YI)) +
geom_smooth(method = "lm", formula = y~poly(x,3), aes(x = hours, y = YI)) +
ggtitle("Yellowness Index for PET Exposed to Xenon Arc #2") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")
data.optical %>% filter(exposure == "DampHeat", Material == "AAA") %>%
ggplot() + geom_jitter(aes(x = hours, y = g60, color = AAA.color), width = 8) +
geom_smooth(method = "lm", aes(x = hours, y = g60)) +
geom_smooth(method = "lm", formula = y~poly(x,2), aes(x = hours, y = g60)) +
ggtitle("Gloss at 60 Degrees for PET Exposed to Damp Heat") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")
data.optical %>% filter(exposure == "Xenon#1", Material == "PET") %>%
ggplot() + geom_jitter(aes(x = hours, y = g60, color = PET.color), width = 8) +
geom_smooth(method = "lm", aes(x = hours, y = g60)) +
geom_smooth(method = "lm", formula = y~poly(x,3), aes(x = hours, y = g60)) +
ggtitle("Gloss at 60 Degrees for PET Exposed to Xenon Arc #1") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")
data.optical %>% filter(exposure == "Xenon#2", Material == "PET") %>%
ggplot() + geom_jitter(aes(x = hours, y = g60, color = PET.color), width = 8) +
geom_smooth(method = "lm", aes(x = hours, y = g60)) +
geom_smooth(method = "lm", formula = y~poly(x,2), aes(x = hours, y = g60)) +
ggtitle("Gloss at 60 Degrees for PET Exposed to Xenon Arc #2") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")
base.AAA <- subset(ftir.all, ftir.all$Material == "AAA")
base.AAA.DH <- subset(base.AAA, base.AAA$Exposure == "DampHeat")
qplotspc(base.AAA.DH[c(1,5,8,13)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.AAA, 3100:3400)
maxAbs <- which.max(base.AAA$spc[1,indRange])
normPeak <- base.AAA@wavelength[indRange][maxAbs] # It's at 3288 for this one
normIndex <- wl2i(base.AAA, normPeak)
spcNorm <- 0*base.AAA$spc
for (row in 1:nrow(base.AAA@data$spc)) {
spcNorm[row, ] <- base.AAA@data$spc[row, ] / base.AAA$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.AAA, spcNorm, wavelength = base.AAA@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyamide Damp Heat FTIR Spectra Normalized to 3288",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyamide Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
base.PET <- subset(ftir.all, ftir.all$Material == "PET")
base.PET.DH <- subset(base.PET, base.PET$Exposure == "DampHeat")
qplotspc(base.PET.DH[c(1,7)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyethylene Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.PET, 1100:1300)
maxAbs <- which.max(base.PET$spc[1,indRange])
normPeak <- base.PET@wavelength[indRange][maxAbs] # It's at 1269 for this one
normIndex <- wl2i(base.PET, normPeak)
spcNorm <- 0*base.PET$spc
for (row in 1:nrow(base.PET@data$spc)) {
spcNorm[row, ] <- base.PET@data$spc[row, ] / base.PET$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.PET, spcNorm, wavelength = base.PET@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyethylene Damp Heat Spectra Normalized to 1269",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Polyethylene Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
base.PVF <- subset(ftir.all, ftir.all$Material == "PVF")
base.PVF.DH <- subset(base.PVF, base.PVF$Exposure == "DampHeat")
qplotspc(base.PVF.DH[c(1,7)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
indRange <- wl2i(base.PVF, 1000:1100)
maxAbs <- which.max(base.PVF$spc[1,indRange])
normPeak <- base.PVF@wavelength[indRange][maxAbs] # It's at 1087 for this one
normIndex <- wl2i(base.PVF, normPeak)
spcNorm <- 0*base.PVF$spc
for (row in 1:nrow(base.PVF@data$spc)) {
spcNorm[row, ] <- base.PVF@data$spc[row, ] / base.PVF$spc[row, normIndex]
spcNorm[row, ] <- spcNorm[row, ] + 0.8
}
normalized <- decomposition(base.PVF, spcNorm, wavelength = base.PVF@wavelength,
label.wavelength = "normWV", label.spc = "normpeak", retain.columns = TRUE)
normalized.DH <- subset(normalized, normalized$Exposure == "DampHeat")
qplotspc(normalized.DH[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra Normalized to 1087",
x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,10)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
qplotspc(normalized.X1[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
normalized.X1 <- subset(normalized, normalized$Exposure == "Xenon#1")
qplotspc(normalized.X1[c(1,7)], mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Arc Xenon #1 FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
for (i in lms) {
print(i)
}
for (i in lms) {
print(i)
print(i$residuals)
}
print(i$rsq)
for (i in lms) {
print(i)
print(i$rsq)
}
for (i in lms) {
print(summary(i)$rsq)
}
summary(lms[1])
summary(lms[[1]])
summary(lms[[1]]$r.squared)
summary(lms[1$r.squared)
summary(lms[1])$r.squared
summary(lms[[1]])$r.squared
for (i in lms) {
i$call
summary(i)$r.squared
}
for (i in lms) {
i$call
summary(i)$r.squared
}
for (i in lms) {
print(i$call)
summary(i)$r.squared
}
for (i in lms) {
print(i$call)
print(summary(i)$r.squared)
}
base.PVF.DH <- subset(base.PVF, base.PVF$Exposure == "DampHeat")
qplotspc(base.PVF.DH[c(1,7)],
mapping = aes(x = .wavelength, y = spc, color = as.factor(Step))) +
labs(title = "PVF Damp Heat FTIR Spectra", x = "wavenumber",  y = "Absorbance",
color = "Step") + theme(plot.title = element_text(hjust = 0.5))
